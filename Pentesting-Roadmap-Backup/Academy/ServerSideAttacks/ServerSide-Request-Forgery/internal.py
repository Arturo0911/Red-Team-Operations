
"""
got it for the first implementation of the SSRF
internal.py
"""

import os
from flask import *
import urllib

basedir = os.path.abspath(os.path.dirname(__file__))

app = Flask(__name__)

def get_url(url):
	content = ""
	try:
		with urllib.request.urlopen(url) as response:
			content = response.read()
			if type(content) == bytes:
				try: content = content.decode()
				except: pass
			return content
	except urllib.error.URLError as e:
		content = e.reason
	except Exception as e:
		content = e
	return str(content)

@app.route("/")
def index():
	return redirect(url_for('load') +"?q=index.html")

@app.errorhandler(404)
def page_not_found(e):
	return redirect("/")
	
@app.route("/load")
def load():
	res = request.args.get("q")
	file = os.path.join(basedir, os.path.abspath(res))
	if os.path.isfile(file):
		with open(file, "r") as f:
			content = f.read()
			return content
	else:
		url = res.replace('://','')
		content = "<html><body><h1>Resource: "+url+"</h1><a>"+get_url(url)+"</a></body></html>"
		return render_template_string(content)
	return render_template_string("<html><body><h1>Error</h1></html>")

if __name__ == "__main__":
	port = int(os.environ.get("PORT", 80))
	app.run(host="0.0.0.0", port=port)</a></body></html>
