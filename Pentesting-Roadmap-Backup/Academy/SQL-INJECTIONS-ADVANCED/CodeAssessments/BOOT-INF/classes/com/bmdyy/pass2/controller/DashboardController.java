package com.bmdyy.pass2.controller;

import com.bmdyy.pass2.model.Credential;
import com.bmdyy.pass2.security.services.UserDetailsImpl;
import com.bmdyy.pass2.security.services.UserDetailsServiceImpl;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class DashboardController {
   @Autowired
   JdbcTemplate jdbcTemplate;
   @Autowired
   UserDetailsServiceImpl userDetailsService;
   @Value("${pass2.app.flag}")
   private String flag;

   @GetMapping({"/dashboard"})
   public String GET_Dashboard(@RequestParam(required = false) String e, Model model) {
      UserDetailsImpl userDetails = (UserDetailsImpl)SecurityContextHolder.getContext().getAuthentication().getPrincipal();
      model.addAttribute("userDetails", userDetails);
      String sql = "SELECT * FROM credentials WHERE uid = ? ORDER BY id";
      List credentials = this.jdbcTemplate.query(sql, new Object[]{userDetails.getId()}, new BeanPropertyRowMapper(Credential.class));
      model.addAttribute("credentials", credentials);
      model.addAttribute("flag", this.flag);
      model.addAttribute("e", e);
      return "dashboard";
   }

   @PostMapping({"/dashboard/add"})
   public void POST_Dashboard_Add(HttpServletResponse response, @RequestParam String title, @RequestParam String username, @RequestParam String password) throws IOException {
      UserDetailsImpl userDetails = (UserDetailsImpl)SecurityContextHolder.getContext().getAuthentication().getPrincipal();
      String sql = "INSERT INTO credentials (uid, title, username, password) VALUES (?, ?, ?, ?)";
      this.jdbcTemplate.update(sql, new Object[]{userDetails.getId(), title, username, password});
      response.sendRedirect("/dashboard?e=Added+password!");
   }

   @PostMapping({"/dashboard/edit"})
   public void POST_Dashboard_Edit(HttpServletResponse response, @RequestParam String id, @RequestParam String title, @RequestParam String username, @RequestParam String password) throws IOException {
      UserDetailsImpl userDetails = (UserDetailsImpl)SecurityContextHolder.getContext().getAuthentication().getPrincipal();

      Credential c;
      String sql2;
      try {
         Long var10000 = userDetails.getId();
         sql2 = "SELECT * FROM credentials WHERE uid = " + var10000 + " AND id = " + id.replaceAll("'", "");
         c = (Credential)this.jdbcTemplate.queryForObject(sql2, new BeanPropertyRowMapper(Credential.class));
      } catch (Exception var9) {
         response.sendRedirect("/dashboard?e=You+do+not+own+this+ID!");
         return;
      }

      sql2 = "UPDATE credentials SET title = ?, username = ?, password = ? WHERE id = ?";
      this.jdbcTemplate.update(sql2, new Object[]{title, username, password, c.getId()});
      response.sendRedirect("/dashboard?e=Password+edited!");
   }
}
